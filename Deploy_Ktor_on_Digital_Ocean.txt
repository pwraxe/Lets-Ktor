Perform Localhost base code on ktor 
Run code on localhost:8080/...
if sucessfully runs then do following steps 


Step 1 : add Fat Jar module in build.gradle
			
			task fatJar(type: Jar) {
			    manifest {
			        attributes 'Main-Class': mainClassName
			    }
			    from { configurations.runtimeClasspath.collect { it.isDirectory() ? it : zipTree(it) } }
			    with jar
			}

			>>> Sync 


Step 2 :  In Right Panel > Open "Gradle" TAB  -> Goto 
				>>> "Task" >>> "other" >>> double Click on "fatJar" >>> Wait for Successfull Build

Step 3 : 	- Open Terminal >>> Goto Path >>> cd build/libs  
		 		(you can also see left project panel , red color "build" folder and open it you will see "libs")
		 	
		 	- type "dir" in terminal to check any directory available or not  [Upto this step directory should be there]

Step 4 :    - Run this directory by type in terminal "$ java -jar jarFileName" 

		 	- in terminal you will see responding at 0.0.0.0:8080 

		 	- if You face Exception : Exception in thread "main" java.net.BindException: Address already in use: bind
				---> then stop local server all features in xampp if use

		 	- then again run goto Step 4  

Step 5 :    If No Bind Error then >>> open browser and perform code check it runs or not without local server
			Note : If in case you change port number then after step 4 you get thet port in result Ex. 0.0.0.0:PORT
			Make sure you running on that port locally 
				
Step 6 :   - Create new file named as "Dockerfile" in root directory

			Copy and paste following code in Dockerfile 
			---------------------------------------------------------------------------
				FROM openjdk:11-jdk-slim

				WORKDIR /src
				COPY . /src

				RUN apt-get update
				RUN apt-get install -y dos2unix
				RUN dos2unix gradlew

				RUN bash gradlew fatJar

				WORKDIR /run
				RUN cp /src/build/libs/*.jar /run/server.jar

				EXPOSE 8086

				CMD java -jar /run/server.jar

			---------------------------------------------------------------------------

Step 7 : Build docker file by typing in terminal >>>  "docker build -t anyLowerCaseTagForDockerImage ."

		Note : if you face Error like
				error during connect: This error may indicate that the docker daemon is not running. POST ....

				- then make sure your docker desktop software running it auto starts your docker

				- and then again goto Step 7

				- wait for complete context transfer

Step 8 : Type following command in terminal 
			
			PORT : your current given port OR port which you get at step 4

			$ docker run --name yourGivenTagNameAsItIs -p PORT:PORT yourGivenTagNameAsItIs

			after applying above command >>> in response you will get Responding at 0.0.0.0:8086

			run code on webbrowser check working or not


Step 9 : Enter Command "$docker ps"  to check your docker image in container


****************************** Up To this you just setup docker image locally *************************************

From now we upload on digital Ocean



 - login with digital ocen account >>> https://cloud.digitalocean.com/

 - Left Panel >>> Click on New Project  >>>  Fill form and Click on  "Create project"

 - It will ask existing droplets >>> skip this steps 

 - Below Click on "Go containerized with Docker"

 - Select Ubuntu_20.04  >>> Plan : Basic >>> CPU Option : Regular Intel >>> Region : AnyYouWant >>> Authentication : SSH Keys 

 		Q. How To Setup SSH Key?
 		->  - open terminal/gitbash/powershell any which can run commands
 			- type "$ssh-keygen"
 			- Enter fileName
 			- Enter Password , and again  (make sure you remember or note it somewhere)

 		Q. How to add public key?
 		-> just type commad "$cat ~/.ssh/id_rsa.pub"
 			- Just copy key starts with "ssh-rsa....."   and paste it in "SSH Key Content" in digital Ocean
 			- Enter any name to ssh Key and Click on Add SSH Key

  - Choose hostname you want
  
  - Add tags (optional)

  - Click on Create Droplet

  - You may saw droplet with your custom name building 


  =====================================================================================================================================

- Setup code in localhost if everything is perfectly runs then do following
	
	- Login Git Account >>> create Repository >>> perform following commands

		git init
		git add README.md
		git commit -m "first commit"
		git branch -M main
		git remote add origin https://github.com/gitusername/projectname.git
		
		git push -u origin main


		For first time you may see following error
		{
			remote: Support for password authentication was removed on August 13, 2021. Please use a personal access token instead.
			remote: Please see https://github.blog/2020-12-15-token-authentication-requirements-for-git-operations/ for more information.
			fatal: Authentication failed for 'https://github.com/gitusername/projectRepoAtGit.git/'
		}Solution{
			Step 1 : Create Personal Access Token on Github

			on your Github Account >>> Setting >>> Developer Setting >>> Personal Access Token >>> Generate New Token >>> Enter Few notes >>> Fill Up Form as Required
				>>> Click on "Generate Token" >>> COPY And Paste Somewhere >>>
			Git Token : "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"

			Step 2 : - click on Wondows Button on Keyboard type "Manage Windows Credentials"
					 - Find "git:https://github.com" > Open it >>> Click on Edit >>> Replace your git password with git token which you just copied >>> Saved


		}

		again in terminal >> type "git push -u origin main" >>> it may ask 
			Username for 'https://github.com': gitUsername
			Password for 'https://gitUsername@github.com': //paste token here insted typing password

		and here done You successflly push code on your live git repository


	- Enable VCS >>> Git >>>  "$git add ."  >>>  "$git commit -m 'commitMsg'"  >>> git push origin main/master

	- On Digital Ocean >>> In Left Panel Click on "Apps"

	- Click on Github > Authorised if not and select repository 

	- If It ask for Choose repository  and You cant see then edit permission and select repository to share in github and save >>>

	- after reloading again select git >>> Choose Reository >>> Next >>> Here you will see "Docker file Detected" >>> i.e everything is good

	- You can add database >>> type name of database >>> but it is PostgreSQL
 
	- Click on Next >>> Select Plan $5/month >>> Launch Basic App >>> You now see "Building" 
	- Note >> DO NOT Close Window OR refresh else you may face failuar in deployment


	For getting Link >>> 
		Left Panel >>> Click on Apps >>> Yuo can see your created app >>> also same at end you can see your app url with Column name
		
				
==================================================== To Add Custom Domain Name =====================================================================
		
	Fot Add Custom Domain insted of default link from digital Ocean
		Step 1 : Make sure you added domain in "Networking" >>> "Domain" TAB  >>> with list as 
				Domain Name			Directs To
				NameOfDomain
				1 CNAME / 3 NS			
			
		Step 2 : Click on "Apps" >>> Click on App Name  >>> Setting >>> Domains >>> Add Domain  >>> Come back again in Setting >>> Domain >>> it may show "Configuring"

		Step 3 : Goto Site where you have Server (In my case I have VPS at Hostinger) 
				>>> Server >>> Server Management >>> Other Settings >>> sethostname same as added in digitalOcean
				
				**************************************************************************************************
				NOTE : Domain Name at Digital Ocean ==  Domain Name at VPS at Hostinger   (Should be same)
				**************************************************************************************************
				
				Now run custom domain at web-browser
	
			


